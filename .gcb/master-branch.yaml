steps:

- name: 'gcr.io/cloud-builders/docker'
  id: docker-build
  args: ['build', '-t', 'gcr.io/$_PROJECT/${_APP_NAME}:master-$SHORT_SHA', '-t', 'gcr.io/$_PROJECT/${_APP_NAME}:master', '.', '-f', 'docker/prod/server/Dockerfile']

- name: 'docker/compose'
  id: tests
  env:
    - 'IMG=gcr.io/$PROJECT_ID/${_APP_NAME}:master-$SHORT_SHA'
  args: ['run', '-f', 'docker-compose.ci.yml','--rm', 'ci_test']

- name: 'gcr.io/cloud-builders/kubectl'
  id: kubectl-deploy-backend
  args: ['set', 'image', 'deployment', '${_APP_NAME}', '${_APP_NAME}=gcr.io/$_PROJECT/${_APP_NAME}:master-$SHORT_SHA']
  env:
    - 'CLOUDSDK_CORE_PROJECT=w11-apollo'
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west3-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=apollo'

- name: 'gcr.io/cloud-builders/kubectl'
  id: kubectl-deploy-celery
  args: ['set', 'image', 'deployment', 'celery', 'celery=gcr.io/$_PROJECT/${_APP_NAME}:master-$SHORT_SHA']
  env:
    - 'CLOUDSDK_CORE_PROJECT=w11-apollo'
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west3-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=apollo'

images: ['gcr.io/$PROJECT_ID/${_APP_NAME}:master', 'gcr.io/$PROJECT_ID/${_APP_NAME}:master-$SHORT_SHA']

substitutions:
  _APP_NAME: backend
